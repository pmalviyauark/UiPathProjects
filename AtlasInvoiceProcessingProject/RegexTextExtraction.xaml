<Activity mc:Ignorable="sap sap2010" x:Class="RegexTextExtraction" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_dtInvoiceExtraction" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_dictConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_strOmniOCRTextExtraction" Type="InArgument(x:String)" />
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1172,1490</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>RegexTextExtraction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.PDF</x:String>
      <x:String>UiPath.PDF.Activities.PDF</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.Vision.OmniPage.Core</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.OmniPage.Core</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Private.Xml.Linq</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="729,1425" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="Use different Regex Expression to extract the invoice fields - Invoice number, Invoice Date, Due Date, BillToCompany, BillToName, BillToAddress, BillToPhoneNumber, BillToEmail, LineItemDescription, LineItemRate, LineItemTotal, InvoiceShippingTax, InvoiceTotal and store it in in_dtInvoiceExtraction datatable." DisplayName="RegexTextExtraction" sap:VirtualizedContainerService.HintSize="687,1337" sap2010:WorkflowViewState.IdRef="Sequence_1">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strInvoiceNumber" />
        <Variable x:TypeArguments="x:String" Name="strInvoiceDate" />
        <Variable x:TypeArguments="x:String" Name="strDueDate" />
        <Variable x:TypeArguments="x:String" Name="strInvoiceTotal" />
        <Variable x:TypeArguments="x:String" Name="strInvoiceShippingTax" />
        <Variable x:TypeArguments="x:String" Name="strLineItemTotal" />
        <Variable x:TypeArguments="x:String" Name="strLineItemDescription" />
        <Variable x:TypeArguments="x:String" Name="strLineItemQuantity" />
        <Variable x:TypeArguments="x:String" Name="strLineItemPrice" />
        <Variable x:TypeArguments="x:String" Name="strInvoiceSubtotalShippingTotal" />
        <Variable x:TypeArguments="x:String" Name="strBillToName" />
        <Variable x:TypeArguments="x:String" Name="strBillToAddress" />
        <Variable x:TypeArguments="x:String" Name="strBillToPhoneNumber" />
        <Variable x:TypeArguments="x:String" Name="strBillToEmail" />
        <Variable x:TypeArguments="x:String" Name="strBillToCompany" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtLineItems" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message Process Start" sap:VirtualizedContainerService.HintSize="625,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Started Regex Text Extraction Process&quot;]" />
      <ui:Matches DisplayName="Regex Matches for Invoice Date" FirstMatch="[strInvoiceDate]" sap:VirtualizedContainerService.HintSize="625,60" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[in_strOmniOCRTextExtraction]" IsBuilderTabModified="False" Pattern="[in_dictConfig(&quot;InvoiceDateRegex&quot;).ToString]" RegexOption="IgnoreCase, Compiled">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:Matches>
      <ui:Matches DisplayName="Regex Matches for Due Date" FirstMatch="[strDueDate]" sap:VirtualizedContainerService.HintSize="625,60" sap2010:WorkflowViewState.IdRef="Matches_3" Input="[in_strOmniOCRTextExtraction]" IsBuilderTabModified="False" Pattern="[in_dictConfig(&quot;DueDateRegex&quot;).ToString]" RegexOption="IgnoreCase, Compiled" />
      <Switch x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="The case where Invoice File Contains the Vendor B type Invoices it will use the regexes related to VendorB invoice type.&#xA;The case where  the Invoice File Contains the Vendor D type Invoices it will use the regexes related to VendorD invoice type" DisplayName="Switch" Expression="[in_TransactionItem.Reference.Substring(0,in_TransactionItem.Reference.Length-4).Trim]" sap:VirtualizedContainerService.HintSize="625,705" sap2010:WorkflowViewState.IdRef="Switch`1_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence x:Key="VendorB" sap:VirtualizedContainerService.HintSize="404,425" sap2010:WorkflowViewState.IdRef="Sequence_24">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RegexTextExtractionVendorB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="362,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="RegexTextExtractionVendorB.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strInvoiceNumber">[strInvoiceNumber]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strBillToCompany">[strBillToCompany]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strBillToName">[strBillToName]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strBillToAddress">[strBillToAddress]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strBillToEmail">[strBillToEmail]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strBillToPhoneNumber">[strBillToPhoneNumber]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strLineItemDescription">[strLineItemDescription]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strLineItemQuantity">[strLineItemQuantity]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strLineItemPrice">[strLineItemPrice]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strLineItemTotal">[strLineItemTotal]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strInvoiceShippingTax">[strInvoiceShippingTax]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strInvoiceTotal">[strInvoiceTotal]</OutArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dictConfig">[in_dictConfig]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_strOmniOCRTextExtraction">[in_strOmniOCRTextExtraction]</InArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtLineItems">[dtLineItems]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:LogMessage DisplayName="Log Message Add Field Values to Datatable" sap:VirtualizedContainerService.HintSize="362,92" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Add All Extracted Fields to the Datatable&quot;]" />
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtLineItems]" DisplayName="For Each Row of Line Item in Data Table dtLineItems" sap:VirtualizedContainerService.HintSize="362,52" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="LineItem" />
                </ActivityAction.Argument>
                <Sequence sap:VirtualizedContainerService.HintSize="465,570" sap2010:WorkflowViewState.IdRef="Sequence_30">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="Multiple Assign Line Item Values" sap:VirtualizedContainerService.HintSize="423,256" sap2010:WorkflowViewState.IdRef="MultipleAssign_15">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_48">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strLineItemDescription]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[LineItem.Item(0).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_49">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strLineItemPrice]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[LineItem.Item(3).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_50">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strLineItemPrice]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[strLineItemPrice.Replace("$","")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_51">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strLineItemQuantity]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[LineItem.Item(2).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_52">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strLineItemTotal]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[LineItem.Item(4).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_53">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strLineItemTotal]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[strLineItemTotal.Replace("$","")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:MultipleAssign>
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strInvoiceNumber,strInvoiceDate,strDueDate,strBillToCompany, strBillToName,strBillToAddress, strBillToEmail, strBillToPhoneNumber, strLineItemDescription, strLineItemQuantity,strLineItemPrice, strLineItemTotal, strInvoiceShippingTax,strInvoiceTotal}]" DataTable="[io_dtInvoiceExtraction]" DisplayName="Add Data Row for the extracted Fields" sap:VirtualizedContainerService.HintSize="423,186" sap2010:WorkflowViewState.IdRef="AddDataRow_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
        </Sequence>
        <Sequence x:Key="VendorD" sap:VirtualizedContainerService.HintSize="404,425" sap2010:WorkflowViewState.IdRef="Sequence_25">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RegexTextExtractionVendorD.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="362,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="RegexTextExtractionVendorD.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strInvoiceNumber">[strInvoiceNumber]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strBillToCompany">[strBillToCompany]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strBillToName">[strBillToName]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strBillToAddress">[strBillToAddress]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strBillToEmail">[strBillToEmail]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strBillToPhoneNumber">[strBillToPhoneNumber]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strLineItemDescription">[strLineItemDescription]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strLineItemQuantity">[strLineItemQuantity]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strLineItemPrice">[strLineItemPrice]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strLineItemTotal">[strLineItemTotal]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strInvoiceShippingTax">[strInvoiceShippingTax]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strInvoiceTotal">[strInvoiceTotal]</OutArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dictConfig">[in_dictConfig]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_strOmniOCRTextExtraction">[in_strOmniOCRTextExtraction]</InArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtLineItems">[dtLineItems]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:LogMessage DisplayName="Log Message Add Field Values to Datatable" sap:VirtualizedContainerService.HintSize="362,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Add All Extracted Fields to the Datatable&quot;]" />
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtLineItems]" DisplayName="For Each Row of Line Item in Data Table dtLineItems" sap:VirtualizedContainerService.HintSize="362,52" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="LineItem" />
                </ActivityAction.Argument>
                <Sequence sap:VirtualizedContainerService.HintSize="465,570" sap2010:WorkflowViewState.IdRef="Sequence_28">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="Multiple Assign Line Item Values" sap:VirtualizedContainerService.HintSize="423,256" sap2010:WorkflowViewState.IdRef="MultipleAssign_10">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strLineItemDescription]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[LineItem.Item(0).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_43">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strLineItemPrice]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[LineItem.Item(2).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_44">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strLineItemPrice]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[strLineItemPrice.Replace("$","")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_45">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strLineItemQuantity]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[LineItem.Item(3).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_46">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strLineItemTotal]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[LineItem.Item(4).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_47">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strLineItemTotal]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[strLineItemTotal.Replace("$","")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:MultipleAssign>
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strInvoiceNumber,strInvoiceDate,strDueDate,strBillToCompany, strBillToName,strBillToAddress, strBillToEmail, strBillToPhoneNumber, strLineItemDescription, strLineItemQuantity,strLineItemPrice, strLineItemTotal, strInvoiceShippingTax,strInvoiceTotal}]" DataTable="[io_dtInvoiceExtraction]" DisplayName="Add Data Row for the extracted Fields" sap:VirtualizedContainerService.HintSize="423,186" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
        </Sequence>
      </Switch>
      <ui:LogMessage DisplayName="Log Message Process End" sap:VirtualizedContainerService.HintSize="625,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Ended Regex Text Extraction Process&quot;]" />
    </Sequence>
  </Sequence>
</Activity>